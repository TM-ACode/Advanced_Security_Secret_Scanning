name: Vendors

patterns:
  - name: Azure SQL Connection String
    type: azure_sql_connection_string
    regex:
      pattern: |
        (?i)[a-z][a-z0-9-]+\.database(?:\.secure)?\.(?:(?:windows|usgovcloudapi)\.net|chinacloudapi\.cn|cloudapi\.de)
    comments:
      - "Removed from Secret Scanning for private repositories: https://github.blog/changelog/2021-10-18-secret-scanning-no-longer-supports-azure-sql-connection-strings-in-private-repos/"
    expected:
      - name: azure.js
        start_offset: 27
        end_offset: 61

  - name: Grafana API token
    type: grafana_api_token
    regex:
      pattern: |
        eyJrIjoi[A-Za-z0-9_=-]{42}
    expected:
      - name: grafana.txt
        start_offset: 107
        end_offset: 157
      - name: grafana.txt
        start_offset: 159
        end_offset: 209

  - name: SendGrid (deprecated)
    type: sendgrid
    regex:
      pattern: |
        SG\.[a-zA-Z0-9-]{5,}\.[a-zA-Z0-9-]{5,}
      end: |
        \z|[^a-zA-Z0-9-]
    comments:
      - "Deprecated (supported by Secret Scanning)"
    expected:
      - name: sendgrid.py
        start_offset: 20
        end_offset: 89

  # random 64-character hex string
  # https://docs.sentry.io/api/auth/
  # Source: https://github.com/getsentry/sentry/blob/master/src/sentry/models/apitoken.py#L27
  - name: Sentry Auth Token
    type: sentry_auth_token
    regex:
      pattern: |
        [a-fA-F0-9]{64}
      start: |
        (?:\A|[\r\n])(?:\[auth\][^[]*\ntoken=|(?:export )?SENTRY_AUTH_TOKEN=|sentry-cli [^\r\n]*--auth-token |auth\.token=)
      end: |
        \z|\s
      additional_match:
        - \d\D|\D\d
    expected:
      - name: dotenv
        start_offset: 18
        end_offset: 82
      - name: .sentryclirc
        start_offset: 13
        end_offset: 77
      - name: sentry.sh
        start_offset: 35
        end_offset: 99
      - name: sentry.properties
        start_offset: 11
        end_offset: 75

  # random 32-character hex string
  # Source: https://github.com/getsentry/sentry/blob/master/src/sentry/models/apikey.py#LL74C18-L74C18
  - name: Sentry API Key
    type: sentry_api_key
    regex:
      pattern: |
        [a-fA-F0-9]{32}
      start: |
        (?:\A|[\r\n])(?:\[auth\][^[]*\napi_key=|(?:export )?SENTRY_API_KEY=|sentry-cli [^\r\n]*--api-key |auth\.api_key=)
      end: |
        \z|\s
      additional_match:
        - \d\D|\D\d
    expected:
      - name: dotenv
        start_offset: 98
        end_offset: 130
      - name: .sentryclirc
        start_offset: 86
        end_offset: 118
      - name: sentry.sh
        start_offset: 121
        end_offset: 153
      - name: sentry.properties
        start_offset: 89
        end_offset: 121

  # https://docs.sentry.io/product/sentry-basics/dsn-explainer
  - name: Sentry DSN secret
    type: sentry_dsn_secret
    regex:
      pattern: |
        [a-fA-F0-9]{32}
      start: |
        https://[a-fA-F0-9]{32}:
      end: |
        @([a-z0-9-.]+\.)?sentry\.io(?:/[^?#]*)?/\d+
      additional_match:
        - \d\D|\D\d
    comments:
      - "The secret part of the DSN is optional and effectively deprecated, and should be removed from the DSN: https://docs.sentry.io/product/sentry-basics/dsn-explainer"
    expected:
      - name: sentry_dsn.txt
        start_offset: 41
        end_offset: 73

  # https://github.com/40thieves/webpack-sentry-plugin/blob/master/README.md
  - name: Sentry webpack plugin token
    type: sentry_webpack_plugin_token
    regex:
      pattern: |
        (?:[a-fA-F0-9]{32}|[a-fA-F0-9]{64})
      start: |
        new SentryPlugin\(\s*\{[^}]*[,\n \t]apiKey:\s*['"]
      end: |
        ['"]
      additional_match:
        - \d\D|\D\d
    expected:
      - name: webpack_sentry.js
        start_offset: 215
        end_offset: 247

  # https://registry.terraform.io/providers/jianyuan/sentry/latest/docs
  - name: Sentry Terraform provider token
    type: sentry_terraform_provider_token
    regex:
      pattern: |
        [a-fA-F0-9]{64}
      start: |
        (?:\A|[\r\n])provider "sentry" {[^}]*[\n \t]token\s*=\s*['"]
      end: |
        ['"]
      additional_match:
        - \d\D|\D\d
    expected:
      - name: terraform.tf
        start_offset: 127
        end_offset: 191

  - name: Okta token
    type: okta_token
    regex:
      version: 0.1
      pattern: |
        (0{2}[0-9A-Za-z_-]{40})
      start: |
        (\A|[^0-9A-Za-z_+/-])
      end: |
        (\z|[^0-9A-Za-z_+/=-])
      additional_not_match:
        # Avoid long runs of hexadecimal only 
        - "[0-9A-Fa-f-]{30}"
        # Avoid long runs of alphabetic and _ - only
        - "[a-zA-Z_-]{30}"
        # Avoid big number with exponent
        - ^\d+(\.\d+)?e[+-]?\d+$
        # Don't hit on long strings of numbers and underscores only
        - "[\\d_]{30}"

    expected:
      - name: okta.txt
        start_offset: 12
        end_offset: 54
      - name: okta.txt
        start_offset: 68
        end_offset: 110
      - name: okta.txt
        start_offset: 127
        end_offset: 169
      - name: okta.txt
        start_offset: 180
        end_offset: 222

    comments:
      - Okta token, starting with `00` and 40 random alphanumeric with _ and -

  - name: Okta token (precise)
    type: okta_token_precise
    regex:
      version: 0.1
      pattern: |
        (0{2}[0-9A-Za-z_-]{40})
      start: |
        (\bSSWS\s+|(?i)okta[_-]?(api[_-]?)?(token|key|secret)\s*([:=]|[=-]>|to|[!=]={1,2}|<>)\s*['"`]?)
      end: |
        (\z|[^0-9A-Za-z_+/=-])
      additional_not_match:
        # dummy tokens
        - ^0+$

    comments:
      - Okta token, starting with `00` and 40 random alphanumeric with _ and -
      - adds context beforehand to avoid false positives
      - suitable for push protection

  - name: DataDog API key
    type: datadog_api_key
    regex:
      version: 0.1
      pattern: |
        [a-f0-9]{32}
      start: |
        (\A|\b)(((?i)(DD|DATADOG)_API_KEY)['"]?\s*(value)?[=:,]\s*['"]?|new DataDogWinston\({[^}]*apiKey:\s*'|terraformer import datadog [^\n]*--api-key=|provider "datadog" {[^}]*api_key\s*=\s*")
      end: |
        \z|\b
      additional_not_match:
        - ^0+$
        - ^1+$
        - ^ef8d5de700e7989468166c40fc8a0ccd$
        - ^(a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5|1234567890abcdef1234567890abcdef)$
    expected:
      - name: datadog.txt
        start_offset: 22
        end_offset: 54
      - name: datadog.txt
        start_offset: 154
        end_offset: 186
      - name: datadog.txt
        start_offset: 273
        end_offset: 305
      - name: datadog.txt
        start_offset: 576
        end_offset: 608
      - name: datadog.txt
        start_offset: 740
        end_offset: 772
      - name: datadog.txt
        start_offset: 881
        end_offset: 913
      - name: datadog.txt
        start_offset: 1017
        end_offset: 1049
    comments:
      - "Looks for surrounding context to confirm this is a DataDog API key, not some other 32-byte hex string"

  - name: DataDog APP key
    type: datadog_app_key
    regex:
      version: 0.1
      pattern: |
        [a-f0-9]{40}
      start: |
        (\A|\b)(((?i)(DD|DATADOG)_APP(LICATION)?_KEY)['"]?\s*(value)?[=:,]\s*['"]?|new DataDogWinston\({[^}]*apiKey:\s*'|terraformer import datadog [^\n]*--api-key=|provider "datadog" {[^}]*api_key\s*=\s*")
      end: |
        \z|\b
      additional_not_match:
        - ^0+$
        - ^1+$
        - a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9
    expected:
      - name: datadog.txt
        start_offset: 66
        end_offset: 106
      - name: datadog.txt
        start_offset: 206
        end_offset: 246
      - name: datadog.txt
        start_offset: 323
        end_offset: 363
      - name: datadog.txt
        start_offset: 483
        end_offset: 523
      - name: datadog.txt
        start_offset: 1074
        end_offset: 1114

    comments:
      - "Looks for surrounding context to confirm this is a DataDog App key, not some other 40-byte hex string"

