name: Vendors

patterns:
  - name: Azure SQL Connection String
    type: azure_sql_connection_string
    regex:
      pattern: |
        (?i)[a-z][a-z0-9-]+\.database(?:\.secure)?\.(?:(?:windows|usgovcloudapi)\.net|chinacloudapi\.cn|cloudapi\.de)
    comments:
      - "Removed from Secret Scanning for private repositories: https://github.blog/changelog/2021-10-18-secret-scanning-no-longer-supports-azure-sql-connection-strings-in-private-repos/"
    test:
      data: |
        const db = "abc123.database.secure.windows.net" 
      start_offset: 12
      end_offset: 46
    expected:
      - name: azure.js
        start_offset: 27
        end_offset: 61

  - name: Grafana API token
    type: grafana_api_token
    regex:
      pattern: |
        eyJrIjoi[A-Za-z0-9_=-]{42}
    test:
      data: eyJrIjoiT0tTcG1pUlY2RnVKZTFVaDFsNFZXdE9ZWmNrMkZYbk
    expected:
      - name: grafana.txt
        start_offset: 107
        end_offset: 157
      - name: grafana.txt
        start_offset: 159
        end_offset: 209

  - name: SendGrid (deprecated)
    type: sendgrid
    regex:
      pattern: |
        SG\.[a-zA-Z0-9-]{5,}\.[a-zA-Z0-9-]{5,}
      end: |
        \z|[^a-zA-Z0-9-]
    test:
      data: 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
    comments:
      - "Deprecated (supported by Secret Scanning)"
    expected:
      - name: sendgrid.py
        start_offset: 20
        end_offset: 89

  # random 64-character hex string
  # https://docs.sentry.io/api/auth/
  # Source: https://github.com/getsentry/sentry/blob/master/src/sentry/models/apitoken.py#L27
  - name: Sentry Auth Token
    type: sentry_auth_token
    regex:
      pattern: |
        [a-fA-F0-9]{64}
      start: |
        (?:(?:\A|[\r\n])\[auth\][^[]*\ntoken\s*=|(?:\A|\b)SENTRY_AUTH_TOKEN\s*=|(?:\A|\b)sentry-cli [^\r\n]*--auth-token |(?:\A|\b)auth\.token\s*=)\s*['"`]?
      end: |
        \z|\s|['"`]
      additional_match:
        - \d\D|\D\d
    test:
      data: SENTRY_AUTH_TOKEN=aabbccddeeff0011223344556677889900a1b1c1d1e1f1011121314151617181
      start_offset: 18
    expected:
      - name: dotenv
        start_offset: 18
        end_offset: 82
      - name: .sentryclirc
        start_offset: 13
        end_offset: 77
      - name: sentry.sh
        start_offset: 35
        end_offset: 99
      - name: sentry.properties
        start_offset: 11
        end_offset: 75

  # random 32-character hex string
  # Source: https://github.com/getsentry/sentry/blob/master/src/sentry/models/apikey.py#LL74C18-L74C18
  - name: Sentry API Key
    type: sentry_api_key
    regex:
      pattern: |
        [a-fA-F0-9]{32}
      start: |
        (?:(?:\A|[\r\n])\[auth\][^[]*\napi_key\s*=|(?:\A|\b)SENTRY_API_KEY\s*=|(?:\A|\b)sentry-cli [^\r\n]*--api-key |(?:\A|\b)auth\.api_key\s*=)\s*['"`]?
      end: |
        \z|\s|['"`]
      additional_match:
        - \d\D|\D\d
    test:
      data: SENTRY_API_KEY=aabbccddeeff00112233445566778899
      start_offset: 15
    expected:
      - name: dotenv
        start_offset: 98
        end_offset: 130
      - name: .sentryclirc
        start_offset: 86
        end_offset: 118
      - name: sentry.sh
        start_offset: 121
        end_offset: 153
      - name: sentry.properties
        start_offset: 89
        end_offset: 121

  # https://docs.sentry.io/product/sentry-basics/dsn-explainer
  - name: Sentry DSN secret
    type: sentry_dsn_secret
    regex:
      pattern: |
        [a-fA-F0-9]{32}
      start: |
        https://[a-fA-F0-9]{32}:
      end: |
        @([a-z0-9-.]+\.)?sentry\.io(?:/[^?#]*)?/\d+
      additional_match:
        - \d\D|\D\d
    test:
      data: https://cec9dfceb0b74c1c9a5e3c135585f364:4f6a592349e249c5906918393766718d@sentry.io/2
      start_offset: 41
      end_offset: 73
    comments:
      - "The secret part of the DSN is optional and effectively deprecated, and should be removed from the DSN: https://docs.sentry.io/product/sentry-basics/dsn-explainer"
    expected:
      - name: sentry_dsn.txt
        start_offset: 41
        end_offset: 73

  # https://github.com/40thieves/webpack-sentry-plugin/blob/master/README.md
  - name: Sentry webpack plugin token
    type: sentry_webpack_plugin_token
    regex:
      pattern: |
        (?:[a-fA-F0-9]{32}|[a-fA-F0-9]{64})
      start: |
        new SentryPlugin\(\s*\{[^}]*[,\n \t]apiKey:\s*['"]
      end: |
        ['"]
      additional_match:
        - \d\D|\D\d
    test:
      data: |
        var config = {
            plugins: [
                new SentryPlugin({
                    // Sentry options are required
                    organization: 'your-organization-name',
                    project: 'your-project-name',
                    apiKey: '1234567890abcdef1234567890abcdef',

                    // Release version name/hash is required
                    release: process.env.GIT_SHA
                })
            ]
        }
      start_offset: 215
      end_offset: 247
    expected:
      - name: webpack_sentry.js
        start_offset: 215
        end_offset: 247

  # https://registry.terraform.io/providers/jianyuan/sentry/latest/docs
  - name: Sentry Terraform provider token
    type: sentry_terraform_provider_token
    regex:
      pattern: |
        [a-fA-F0-9]{64}
      start: |
        (?:\A|[\r\n])provider "sentry" {[^}]*[\n \t]token\s*=\s*['"]
      end: |
        ['"]
      additional_match:
        - \d\D|\D\d
    test:
      data: |
        provider "sentry" {
          token = "1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
        }
      start_offset: 31
      end_offset: 95
    expected:
      - name: terraform.tf
        start_offset: 127
        end_offset: 191

  - name: Okta token
    type: okta_token
    regex:
      version: 0.1
      pattern: |
        (0{2}[0-9A-Za-z_-]{40})
      start: |
        (\A|[^0-9A-Za-z_+/-])
      end: |
        (\z|[^0-9A-Za-z_+/=-])
      additional_not_match:
        # Avoid long runs of hexadecimal only 
        - "[0-9A-Fa-f-]{30}"
        # Avoid long runs of alphabetic and _ - only
        - "[a-zA-Z_-]{30}"
        # Avoid big number with exponent
        - ^\d+(\.\d+)?e[+-]?\d+$
        # Don't hit on long strings of numbers and underscores only
        - "[\\d_]{30}"
    test:
      data: okta_token="00RCsRGyrF9QzBe0rnWmw221UeclqRXFQGEJFdhAFM"
      start_offset: 12
      end_offset: 54
    expected:
      - name: okta.txt
        start_offset: 12
        end_offset: 54
      - name: okta.txt
        start_offset: 68
        end_offset: 110
      - name: okta.txt
        start_offset: 127
        end_offset: 169
      - name: okta.txt
        start_offset: 180
        end_offset: 222
    comments:
      - Okta token, starting with `00` and 40 random alphanumeric with _ and -

  - name: Okta API key (precise)
    type: okta_token_precise
    regex:
      version: 0.1
      pattern: |
        0{2}[0-9A-Za-z_-]{40}
      start: |
        (\bSSWS\s{1,5}|(?i)okta[_-]?(api[_-]?)?(token|key|secret)\s{0,28}([:=]|[=-]>|to|[!=]={1,2}|<>)\s{0,28}['"`]?)
      end: |
        \z|[^0-9A-Za-z_+/=-]
    test:
      data: SSWS 00RCsRGyrF9QzBe0rnWmw221UeclqRXFQGEJFdhAFM
      start_offset: 5
    comments:
      - Uses surrounding context to reduce false positives
      - Either `SSWS ` then the token, or a variable starting `okta` followed by an assignment operator, then the token

  - name: DataDog API key
    type: datadog_api_key
    regex:
      version: 0.1
      pattern: |
        [a-f0-9]{32}
      start: |
        (\A|\b)(((?i)(DD|DATADOG)_API_KEY)['"]?\s*(value)?[=:,]\s*['"]?|new DataDogWinston\({[^}]*apiKey:\s*'|terraformer import datadog [^\n]*--api-key=|provider "datadog" {[^}]*api_key\s*=\s*")
      end: |
        \z|\b
      additional_not_match:
        - ^0+$
        - ^1+$
        - ^ef8d5de700e7989468166c40fc8a0ccd$
        - ^(a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5|1234567890abcdef1234567890abcdef)$
    test:
      data: DD_API_KEY=01000000000000000000000000000000
      start_offset: 11
    expected:
      - name: datadog.txt
        start_offset: 22
        end_offset: 54
      - name: datadog.txt
        start_offset: 154
        end_offset: 186
      - name: datadog.txt
        start_offset: 273
        end_offset: 305
      - name: datadog.txt
        start_offset: 576
        end_offset: 608
      - name: datadog.txt
        start_offset: 740
        end_offset: 772
      - name: datadog.txt
        start_offset: 881
        end_offset: 913
      - name: datadog.txt
        start_offset: 1017
        end_offset: 1049
    comments:
      - "Looks for surrounding context to confirm this is a DataDog API key, not some other 32-byte hex string"

  - name: DataDog APP key
    type: datadog_app_key
    regex:
      version: 0.1
      pattern: |
        [a-f0-9]{40}
      start: |
        (\A|\b)(((?i)(DD|DATADOG)_APP(LICATION)?_KEY)['"]?\s*(value)?[=:,]\s*['"]?|new DataDogWinston\({[^}]*apiKey:\s*'|terraformer import datadog [^\n]*--api-key=|provider "datadog" {[^}]*api_key\s*=\s*")
      end: |
        \z|\b
      additional_not_match:
        - ^0+$
        - ^1+$
        - a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9
    test:
      data: DD_APP_KEY=0100000000000000000000000000000000000000
      start_offset: 11
    expected:
      - name: datadog.txt
        start_offset: 66
        end_offset: 106
      - name: datadog.txt
        start_offset: 206
        end_offset: 246
      - name: datadog.txt
        start_offset: 323
        end_offset: 363
      - name: datadog.txt
        start_offset: 483
        end_offset: 523
      - name: datadog.txt
        start_offset: 1074
        end_offset: 1114

    comments:
      - "Looks for surrounding context to confirm this is a DataDog App key, not some other 40-byte hex string"

  - name: Microsoft Teams incoming webhook
    type: teams_incoming_webhook
    regex:
      version: 0.1
      pattern: |
        https://[a-z-]+\.webhook\.office\.com/webhookb2/[a-fA-F0-9]{8}-([a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}@[a-fA-F0-9]{8}-([a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}/[^/]+/[a-fA-F0-9]{32}/[a-fA-F0-9]{8}-([a-fA-F0-9]{4}-){3}[a-fA-F0-9]{12}
      start: |
        \A|\b
      end: |
        \z|\b
      additional_not_match:
        - ^https://contoso\.
    test:
        data: https://example.webhook.office.com/webhookb2/892e8ed3-997c-4b6e-8f8a-7f32728a8a87@f7322380-f203-42ff-93e8-66e266f6d2e4/IncomingWebhook/fcc6565ec7a944928bd43d6fc193b258/4f0482d4-b147-4f67-8a61-11f0a5019547

  - name: LaunchDarkly API key
    type: launchdarkly_api_key
    description: LaunchDarkly API or SDK key
    regex:
      version: 0.1
      pattern: |
        (api|sdk)-[a-f0-9-]{8}-[a-f0-9-]{4}-[a-f0-9-]{4}-[a-f0-9-]{4}-[a-f0-9-]{12}
      start: |
        \A|\b
      end: |
        \z|\b
    test:
      data: api-00000000-0000-0000-0000-000000000000

  - name: PagerDuty API/Service key
    type: pagerduty_api_key
    regex:
      version: 0.1
      pattern: |
        [A-Za-z0-9_-]{20}
      start: |
        (\A|\b)(?i)((pd|pagerduty)_(service|api)_key['"`]?\s*([:=]|[?:]=|[=-]>)\s*['"`]?|Token token=)
      end: |
        \z|\b
      additional_match:
        - '[A-Z]'
        - '[a-z]'
      additional_not_match:
        - ^(pagerduty|pd)_(service|api)_
    test:
      data: pd_api_key=AAAAAAAAAAAAAAAAAAAa
      start_offset: 11
    comments:
      - "Looks for surrounding context to confirm this is a PagerDuty API key, not some other 20-byte alphanumeric string"
      - "The `Token token=` prefix is used in an Authorization header; it's possible that a different vendor could use a similar key and this same prefix, causing results that are a different vendor's key"

  - name: Flickr OAuth token
    type: flickr_oauth_token
    regex:
      version: 0.1
      pattern: |
        [0-9]{17}-[0-9a-f]{16}
      start: |
        (\A|\b)oauth_token=
      end: |
        \z|\b
    test:
      data: oauth_token=72157652803311234-5a8be4617b02f1c3
      start_offset: 12

  - name: Flickr API key
    type: flickr_api_key
    regex:
      version: 0.1
      pattern: |
        [0-9a-f]{32}
      start: |
        https:\/\/api\.flickr\.com\/services\/rest\/?([^ ]+&)?api_key=
      end: |
        \z|\b
    test:
      data: https://api.flickr.com/services/rest/?method=flickr.photos.getSizes&api_key=415fe941b56580b5c99a69ebe44322ee&pho...
      start_offset: 76
      end_offset: 108

  - name: BrowserStack access key
    type: browserstack_access_key
    regex:
      version: 0.1
      pattern: |
        [0-9a-zA-Z]{20}
      start: |
        (\A|\b)(?i)_?(browserstack|bs|automate)_?\.?((Access|Auth)_?Key|Password)['"`]?\s*([:=]|[?:]=|[=-]>|,)\s*['"`]?
      end: |
        \z|[^a-zA-Z0-9/+_-]
    test:
      data: BROWSERSTACK_ACCESS_KEY=ZrQyYJbcgw8YtyzGT3Hn
      start_offset: 24

  - name: BrowserStack access key (imprecise)
    type: browserstack_access_key_imprecise
    regex:
      version: 0.1
      pattern: |
        [0-9a-zA-Z]{20}
      start: |
        (\A|\b)(?i)_?(Access|Auth)_?Key['"`]?\s*([:=]|[?:]=|[=-]>|,)\s*['"`]?
      end: |
        \z|[^a-zA-Z0-9/+_-]
    test:
      data: ACCESS_KEY=ZrQyYJbcgw8YtyzGT3Hn
      start_offset: 11

  - name: BrowserStack token (URL)
    type: browserstack_token_url
    regex:
      version: 0.1
      pattern: |
        [^:]+:[0-9a-zA-Z]{20}
      start: |
        https?://
      end: |
        @hub-cloud\.browserstack\.com/
    test:
      data: https://user:ZrQyYJbcgw8YtyzGT3Hn@hub-cloud.browserstack.com/...
      start_offset: 8
      end_offset: 33

  - name: Vercel Access Token (imprecise)
    type: vercel_access_token_imprecise
    regex:
      version: 0.1
      pattern: |
        [A-Za-z0-9]{24}
      start: |
        (\A|\b|[_.-])(?i)vercel[_.-]?((access|api)[_.-]?)?token\s*[=:]\s*['"]?
      end: |
        \z|\s|['"]
    test:
      data: VERCEL_ACCESS_TOKEN=aaaaaaaaaaaaaaaaaaaaaaaa
      start_offset: 20

  - name: Vercel Access Token
    type: vercel_access_token
    regex:
      version: 0.1
      pattern: |
        [A-Za-z0-9]{24}
      start: |
        (\A|\b)(?i)vercel[_.-]?((access|api)[_.-]?)?token\s*[=:]\s*['"]?
      end: |
        \z|\s|['"]
    test:
      data: VERCEL_ACCESS_TOKEN=aaaaaaaaaaaaaaaaaaaaaaaa
      start_offset: 20

  - name: Vercel CLI token
    type: vercel_cli_token
    regex:
      version: 0.1
      pattern: |
        [A-Za-z0-9]{24}
      start: |
        (\A|\b)vercel [^\r\n]*--token=
      end: |
        \z|\s
    test:
      data: vercel --token=aaaaaaaaaaaaaaaaaaaaaaaa
      start_offset: 15

  - name: Vercel OAuth client secrets
    type: vercel_oauth_client_secrets
    regex:
      version: 0.1
      pattern: |
        [A-Za-z0-9]{24}
      start: |
        (?i)client[._]?Id[:=]\s*['"]?oac_[A-Za-z0-9]{24}['"]?[^\n]*\n[^\n]*client[._]?Secret\s*[:=]\s*['"]?
      end: |
        \z|[^A-Za-z.+/=_-]
    test:
      data: |
        clientId: 'oac_aaaaaaaaaaaaaaaaaaaaaaaa',
        clientSecret: 'aaaaaaaaaaaaaaaaaaaaaaaa',
      start_offset: 57
      end_offset: 81

  - name: UUIDv4 Bearer token (maybe Heroku)
    type: uuidv4_bearer_token
    regex:
      version: 0.1
      pattern: |
        [a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}
      start: |
        (\b|\A)(?i)Bearer[ ]
      end: |
        \b|\z
    test:
      data: Bearer 01234567-89ab-4def-8123-456789abcdef
      start_offset: 7

  - name: Azure client secret
    type: azure_client_secret
    regex:
      version: 0.1
      pattern: |
        [a-zA-Z0-9~_.-]{34}
      start: |
        (?i)(client|azure[a-z_.-]{0,10})(key|secret|password|pwd|token)[a-z_.-]{0,9}\b['"`]?(\s{0,5}[\]\)])?\s{0,3}([:,=]|[=-]>|to|[!=]={1,2}|<>)?\s{0,5}([[{])?['"`]?
      end: |
        \z|["'`]|\s
      additional_match:
        - "[A-Z][a-z]|[A-Z][a-z]"
        - "[0-9][A-Za-z]|[A-Za-z][0-9]"
        - "[.~_-][A-Za-z0-9]|[A-Za-z0-9][.~_-]"
    test:
      data: ClientSecret = "kc3KP75a~edN1cV.rs~_r6F-O7-C-55-Ts"
      start_offset: 16
      end_offset: 50

  - name: Google private key id (or older API key)
    type: google_private_key_id_or_old_api_token
    regex:
      version: 0.1
      pattern: |
        [a-fA-F0-9]{40}
      start: |
        (?i)(private_key_id|google_api_key)['"`]?(\s*[\]\)])?\s*([:,=]|[=-]>|to|[!=]={1,2}|<>)?\s*([[{])?['"`]?
      end: |
        \b|\z
    test:
      data: |
        google_api_key: 0123456789abcdef0123456789abcdef01234567
      start_offset: 16
      end_offset: 56

  - name: OpenStack password/API key
    type: openstack_password_or_key
    description: OpenStack password or API key
    regex:
      pattern: |
        [^'",\r\n \t\x00-\x08]+
      start: |
        (?i)OPEN_?STACK_(PASSWORD|API_?KEY)[_A-Z]*['"`]?(\s*[\]\)])?\s*([:,=]|[=-]>|to|[!=]={1,2}|<>)?\s*([[{])?['"`]?
      end: |
        ['"\r\n,]|\z
      additional_not_match:
        - ^(ENV|[a-z_]+)\[$
        - ^<%=.*%>$
        - ^([a-z_]+\.api_?key|self\.[a-z_]+|os\.environ\.get\()$
        - ^(\$\{?[A-Z]+\}?|<password>|\s+)$
        - ^(@?[a-z_]+\[:.*\]|@[a-z_]+)$
    test:
      data: |
        OPENSTACK_PASSWORD: "password1234isnotagoodpassword"
      start_offset: 21
      end_offset: 51

  - name: AlienVault OTX API key
    type: alienvault_otx_api_key
    description: AlienVault OTX API key
    regex:
      pattern: |
        [a-f0-9]{64}|[a-f0-9]{40}
      start: |
        (?i)ALIENVAULT(_?OTX)?(_?API)?_?KEY['"`]?(\s*[\]\)])?\s*([:,=]|[=-]>|to|[!=]={1,2}|<>)?\s*([[{])?['"`]?
      end: |
        ['"`\r\n,]|\z
    test:
      data: |
        ALIENVAULT_OTX_API_KEY: "0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef"
      start_offset: 25
      end_offset: 89

  - name: Apollo.io API key
    type: apollo_io_api_key
    description: Apollo.io API key
    regex:
      pattern: |
        service:[A-Za-z0-9-]+:[^\s'"`,\x00-\x08\x7f-\xff]+
      start: |
        (?i)key['"`]?(\s*[\]\)])?\s*([:,=]|[=-]>|to|[!=]={1,2}|<>)?\s*([[{])?['"`]?
      end: |
        ['"`,]|\z|\s
    test:
      data: |
        key: service:my-apollo-service:aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa
      start_offset: 5
      end_offset: 67

  - name: ClickUp API key
    type: clickup_api_key
    description: ClickUp API key
    regex:
      pattern: |
        pk_[0-9]{6,8}_[A-Z0-9]{32}
      start: |
        \b|\A
      end: |
        \b|\z
    test:
      data: |
        CLICKUP_API_KEY: "pk_1234567_ABCDEFGHIJKLMNOPQRSTUVWXYZ123456"
      start_offset: 18
      end_offset: 61

  - name: Amazon MWS Auth Token
    type: amazon_mws_auth_token
    description: Amazon MWS Auth Token
    regex:
      pattern: |
        amzn\.mws\.[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
      start: |
        \b|\A
      end: |
        \b|\z
    test:
      data: |
        amzn.mws.auth.token: "amzn.mws.12345678-1234-1234-1234-1234567890ab"
      start_offset: 22
      end_offset: 67

  - name: Jenkins API token
    type: jenkins_api_token
    description: Jenkins API token
    regex:
      pattern: |
        [a-f0-9]{32,64}
      start: |
        (?i)jenkins_?(api[_-]?)?(token|secret|key)['"`]?(\s*[\]\)])?\s*([:,=]|[=-]>|to|[!=]={1,2}|<>)?\s*([[{])?['"`]?
      end: |
        ['"`\r\n,]|\z
    test:
      data: |
        jenkins_api_token="0123456789abcdef0123456789abcdef"
      start_offset: 19
      end_offset: 51

  - name: AWS S3 presigned URL
    type: aws_s3_presigned_url
    description: AWS S3 presigned URL
    regex:
      pattern: |
        https://[a-z-]+\.s3\.amazonaws\.com/[^?\s'"`\r\n]+\?[^\s'"`\r\n]+&X-Amz-Signature=[^\s'"`\r\n]+
      start: |
        \b|\A
      end: |
        ['"`\r\n,]|\z
    test:
      data: |
        https://snort-org-site.s3.amazonaws.com/production/document_files/files/000/000/596/original/Rules_Writers_Guide_to_Snort_3_Rules.pdf?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIXACIED2SPMSC7GA%2F20211011%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20211011T165700Z&X-Amz-Expires=172800&X-Amz-SignedHeaders=host&X-Amz-Signature=1d5134d3a84db0f7b1ece95fcf98387a0cc32ff131b6c95e6a80d3cd4b616a5c
      start_offset: 0
      end_offset: 402

  - name: Azure Access Key (legacy format)
    type: azure_access_key_legacy
    description: Azure Access Key in context in a variable assignment - legacy key format without internal identifiable features
    regex:
      pattern: |
        [A-Za-z0-9/+]+==
      start: |
        (\A|\b)(?i)(AZURE|ACCOUNT)(_?ACCESS|_?STORAGE(_?ACCOUNT)?)?_?KEY['"`]?(\s*[\]\)])?\s*([:,=]|[=-]>|to|[!=]={1,2}|<>)?\s*([[{])?['"`]?
      end: |
        ['"`\r\n,]|\z
      additional_match:
        - ^[A-Za-z0-9/+]{86}==$
    test:
      data: |
        AZURE_ACCESS_KEY: "abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmn=="
      start_offset: 19
      end_offset: 107
    comments:
      - This is a legacy format for Azure Access Keys. The key is base64 encoded and encodes a fixed length key, so we know its length and that it always end in `==`.
      - The key lacks internal identifiable features, which are used in modern keys issued by these Azure services.
      - The use of `+` instead of `{86}` in the regex pattern is due to limitations of secret scanning - make sure you use the "additional match" to constrain the length

  - name: Azure Shared Access Signature (SAS) Token
    type: azure_sas_token
    description: Azure Shared Access Signature (SAS) Token
    regex:
      pattern: |
        (https://[^?]+\?)?[^\s?/]*\bsig=([A-Za-z0-9]|%2[bfBF]){43,}%3[dD][^\s?/]*
      start: |
        \b|\A
      end: |
        \z|\s|['"`]
      additional_match:
        - '(^|&)sv=[0-9]{4}-[0-9]{2}-[0-9]{2}'
        - '(^|&)se=[0-9]{4}-[0-9]{2}-[0-9]{2}'
        - '(^|&)st=[0-9]{4}-[0-9]{2}-[0-9]{2}'
      additional_not_match:
        - '^https://files\.oaiusercontent\.com/'
    test:
      data: |
        AZURE_SAS_TOKEN: "?sv=2019-12-12&ss=bfqt&srt=sco&sp=rwdlacupx&se=2021-10-11T16:57:00Z&st=2021-10-11T08:57:00Z&spr=https&sig=abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmn%3D"
      start_offset: 19
      end_offset: 214
    comments:
      - This is a Shared Access Signature (SAS) token for Azure services. See [these examples](https://learn.microsoft.com/en-us/rest/api/storageservices/service-sas-examples)
      - The token is a URL query string parameter, and the signature is a base64 encoded HMAC-SHA256 hash, so is a fixed length in plain text and always ends in =
      - When encoded in a URL, the `+` character is replaced with `%2B`, the `/` character is replaced with `%2F`, and the `=` character is replaced with `%3D`
      - Because of the variable length of the characters (beacuse of the URL encoding), we use `{43,}` to match the signature
      - We ignore `https://files.oaiusercontent.com/` because they are URLs for images generated by ChatGPT

  - name: CircleCI API token
    type: circleci_api_token
    description: CircleCI API token
    regex:
      pattern: |
        [a-f0-9]{40}
      start: |
        (?i)circle[_-]?(ci[_.-]?)?(api[_.-]?)?(token|key)['"`]?(\s*[\]\)])?\s*([:,=]|[=-]>|to|[!=]={1,2}|<>)?\s*([[{])?['"`]?
      end: |
        ['"`\r\n,]|\z
    test:
      data: |
        circle_ci_api_token: "0123456789abcdef0123456789abcdef01234567"
      start_offset: 22
      end_offset: 62
